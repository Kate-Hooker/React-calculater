{"ast":null,"code":"var _jsxFileName = \"/home/kate/the-lab/React-calculater/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport { useReducer } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n};\n\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n\n      if (payload.digit === '0' && state.currentOperand === '0') {\n        return state;\n      }\n\n      if (payload.digit === '.' && state.currentOperand.includes('.')) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${state.currentOperand || ''}${payload.digit}`\n      };\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {}\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return { ...state,\n          operantion: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.cureentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        opeartion: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.operand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate({\n  currentOperand,\n  previousOperand,\n  operation\n}) {\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return '';\n  let computation = '';\n\n  switch (operation) {\n    case '+':\n      computation = prev + current;\n      break;\n\n    case '-':\n      computation = prev - current;\n      break;\n\n    case '%':\n      computation = prev / current;\n      break;\n\n    case '*':\n      computation = prev * current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [previousOperand, \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: currentOperand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"%\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      clasName: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U3IK2u6L5w8LChD4hEs3C1yVO5M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kate/the-lab/React-calculater/src/App.js"],"names":["useReducer","DigitButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operantion","operation","cureentOperand","evaluate","opeartion","operand","prev","parseFloat","current","isNaN","computation","toString","App","dispatch"],"mappings":"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","sourcesContent":["import './styles.css'\nimport { useReducer } from 'react'\nimport DigitButton from './DigitButton'\nimport OperationButton from './OperationButton'\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate',\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n\n      if (state.overwrite) { \n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        }\n      }\n      if (payload.digit === '0' && state.currentOperand === '0') {\n        return state\n      }\n      if (payload.digit === '.' && state.currentOperand.includes('.')) {\n        return state\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || ''}${payload.digit}`,\n      }\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        \n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state, \n          operantion: payload.operation,\n        }\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.cureentOperand,\n          currentOperand: null,\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        opeartion: payload.operation,\n        currentOperand: null,\n      }\n\n    case ACTIONS.CLEAR:\n      return {}\n    \n    case ACTIONS.EVALUATE: \n      if (\n        state.operation == null ||\n        state.operand == null ||\n        state.previousOperand == null )\n        { return state}\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n\n      }\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n  if (isNaN(prev) || isNaN(current)) return ''\n  let computation = ''\n  switch (operation) {\n    case '+':\n      computation = prev + current\n      break\n    case '-':\n      computation = prev - current\n      break\n    case '%':\n      computation = prev / current\n      break\n    case '*':\n      computation = prev * current\n      break\n  }\n  return computation.toString()\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  )\n\n  return (\n    <div className=\"caculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {previousOperand} {operation}\n        </div>\n        <div className=\"current-operand\">{currentOperand}</div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button>DEL</button>\n      <OperationButton operation=\"%\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n\n      <button clasName=\"span-two\"\n      onClick={() => dispatch ({ type: ACTIONS.EVALUATE})}>=</button>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}